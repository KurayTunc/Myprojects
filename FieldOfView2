using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.AI;

public class FieldOfView : MonoBehaviour
{
    public float radius;
    [Range(0, 360)]
    public float angle;
    public GameObject playerRef;

    public LayerMask targetMask;
    public LayerMask obstructionMask;
    public bool canSeePlayer;
    public Transform targetPosition;
    NavMeshAgent agent;
    private Enemy_Patrol patrolIsOn;
    private AudioSource Background_music_tense;
    private Light chaseLight;


    private void Start()
    {
        StartCoroutine(FOVRoutine());
        playerRef = GameObject.FindGameObjectWithTag("Player");
        agent = GetComponent<NavMeshAgent>();
        patrolIsOn = this.GetComponent<Enemy_Patrol>();
        Background_music_tense = GameObject.FindGameObjectWithTag("BackgroundMusic").GetComponent<AudioSource>();
        chaseLight = GetComponentInChildren<Light>();
        chaseLight.color = Color.white;
    }

     void Update()
    {
        ChasePlayer();
       
    }

    IEnumerator FOVRoutine()
    {
        WaitForSeconds wait = new WaitForSeconds(0.2f);
        while (true)
        {
            yield return wait;
            FieldOfViewCheck();
            
        }
    }

    public void FieldOfViewCheck()
    {
        Collider[] rangeChecks = Physics.OverlapSphere(transform.position, radius, targetMask);

        if (rangeChecks.Length != 0)
        {
            Transform target = rangeChecks[0].transform;

            Vector3 directionToTarget = (target.position - transform.position).normalized;

            if (Vector3.Angle(transform.forward, directionToTarget) < angle / 2)
            {
                float distanceToTarget = Vector3.Distance(transform.position, target.position);

                if (!Physics.Raycast(transform.position, directionToTarget, distanceToTarget, obstructionMask))
                    canSeePlayer = true;
               // else
                    //canSeePlayer = false;


            }
           // else
               // canSeePlayer = false;
        }
        //else if (canSeePlayer)
           // canSeePlayer = false;
    }


    private void ChasePlayer()
    {
        if(canSeePlayer == true)
        {
            agent.SetDestination(targetPosition.position);
            patrolIsOn.GetComponent<Enemy_Patrol>().enabled = false;
            canSeePlayer = true;

            chaseLight.color = Color.red;
            for (agent.speed = 1; agent.speed <= 5; agent.speed++)
            {
                agent.speed = 5;
            }
            Background_music_tense.pitch = 2.32f;
           

        }
    }
}
